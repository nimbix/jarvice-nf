#!/usr/bin/python3

import sys
import os
import json
import requests


if __name__ == '__main__':

  with open('/data/kill.txt', "a", buffering=1) as f:
    print(sys.argv, file=f)
    print('------------------------------------------------------\n\n', file=f)

  sys.exit(0)

  # Kill all job ids specified
  sUser = os.environ.get('JARVICE_USER')
  sAPIKey = os.environ.get('JARVICE_API_KEY')
  sURL = os.environ.get('JARVICE_API_URL')
  if (sUser is None) or (sAPIKey is None) or (sURL is None):
    print('Environment variables JARVICE_USER, JARVICE_API_KEY or JARVICE_API_URL not set')
    sys.exit(-1)

  # Ensure single slash in url path otherwise it causes empty POST for some strange reason
  if sURL[-1] != '/':
    sURL += '/'
  sURL += 'jarvice/shutdown'

  dctParams = {
    'username': sUser,
    'apikey': sAPIKey,
    'label': sys.argv[1],
    'exactmatch': True,
    'all': True,
  }

  # response = requests.post(sURL, params=dctParams)
  #dctJobs = response.json()

  # Print the jobs, but replace spaces in the status to _ (e.g "PROCESSING STARTING") to simplify parsing in nextflow code
  # Format as 10, 24, 32, 10 columns
  # print(f'{"Number":<10} {"Status":<24} {"App":<32} {"Walltime":<10}')
  for num, data in dctJobs.items():
    sStatus = data['job_status'].replace(' ', '_') + f':{data["job_substatus"]}'
    print(f"{num:<10} {sStatus:<24} {data['job_application']:<32} {data.get('job_walltime', '00:00:00'):<10}")

  with open('/data/status.txt', "a", buffering=1) as f:
    for num, data in dctJobs.items():
      sStatus = data['job_status'].replace(' ', '_') + f':{data["job_substatus"]}'
      print(f"{num:<10} {sStatus:<24} {data['job_application']:<32} {data.get('job_walltime', '00:00:00'):<10}", file=f)
    print('------------------------------------------------------\n\n', file=f)
